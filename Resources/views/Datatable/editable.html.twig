{% for column in view_columns %}
    {% if column.editable is defined and true == column.editable %}
        {% set permission = false %}
        {% if column.editableRole is not null and column.editableRole is not empty %}
            {% set permission = is_granted(column.editableRole) %}
        {% elseif column.editableRole is null %}
            {% set permission = true %}
        {% endif %}
        {% if true == permission %}
            {% set token = csrf_token('editable') %}

            var str = '{{ column.data }}'.split(".").join("_");
            str = str.replace(/[\[\], ]+/g,'');
            str = 'span.sg-editable-' + str;
            {% if column.editableRoute is not  empty  %}
            var edit_url = "{{ path(column.editableRoute) }}";
            {% else %}
                var edit_url = "{{ path('sg_datatables_edit') }}"
            {% endif %}
            $(str).editable({
                {# datetime column #}
                {% if 'datetime' == column.alias %}
                viewformat: '{{ column.dateFormat }}',
                combodate: {maxYear: 2050},
                {% endif %}
                {# boolean column #}
                {% if 'boolean' == column.alias %}
                source: [{'true': "{{ column.trueLabel ? column.trueLabel : 'true' }}"}, {'false': "{{ column.falseLabel ? column.falseLabel : 'false' }}"}],
                emptytext: 'false',
                {% elseif ('select' == column.editableType) or ('multiselect' == column.editableType)  or ('category' == column.editableType) %}
                source: [
                    {% for key, value in  column.editableData %}
                        {
                        id: {{ key }},
                        text: {% if value is empty %} '{{ key }}'{% else %}'{{ value }}'{%  endif %}
                        },
                    {% endfor %}
                    ],
                emptytext: 'Aucune valeur',
                {% else %}
                emptytext: 'Aucune valeur',
                {% endif %}
                {% if ('multiselect' == column.editableType)  or ('category' == column.editableType) %}
                select2: {
                    multiple: true,
                    width: 200,
                    },
                {% endif %}
                step: 'any',
                name: '{{ column.data }}',
                url: edit_url,
                title: '{{ column.title }} ' + "{{ 'datatables.actions.edit'|trans({}, 'messages') }}",
                params: function (params) {
                    params.entity = '{{ datatable.entity|e('js') }}';
                    params.token = '{{ token }}';
                    params.role = '{{ column.editableRole }}';

                    return params;
                },
                container: 'body',
                {# many-to-one associations and the Responsive-extension need a complete table redraw #}
                {% if column.getEditableForceReload or column.isAssociation or view_features.extensions.responsive is defined and true == view_features.extensions.responsive %}
                success: function(response, newValue) {
                    oTable.draw('page');
                    {% if column.isAssociation %}
                        alert("{{ 'editable.tableRedraw'|trans({}, 'messages') }}");
                    {% endif %}
                },
                {% endif %}
                error: function(response, newValue) {
                    alert("Erreur : "+response.responseText);
                },
            });

        {% endif %}
    {% endif %}
{% endfor %}
